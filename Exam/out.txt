---------------------------------------------------------------------------------------------
Exam, task 19: Golub-Kahan-Lanczos bidiagonalization
Sofie Stampe Leiszner, 201705219
---------------------------------------------------------------------------------------------
Generates a random matrix with dimensions 5 x 5
A=
0.840188 0.394383 0.783099 0.798440 0.911647 
0.197551 0.335223 0.768230 0.277775 0.553970 
0.477397 0.628871 0.364784 0.513401 0.952230 
0.916195 0.635712 0.717297 0.141603 0.606969 
0.016301 0.242887 0.137232 0.804177 0.156679 
Applies the Golub-Kahan-Lanczos bidiagonalization algoritm
The algoritm is implemented in the function GKLBidiag in functions.c
U, V and B are calculated
U = 
0.624071 0.049123 0.424832 -0.588632 0.284872 
0.146736 0.630611 -0.603987 -0.366208 -0.286166 
0.354599 0.419929 -0.110161 0.605098 0.565367 
0.680527 -0.408841 -0.213167 0.298970 -0.484674 
0.012108 0.506385 0.630192 0.252739 -0.531422 
V = 
1.000000 0.000000 0.000000 0.000000 0.000000 
0.000000 0.424386 -0.233642 0.854461 -0.187629 
0.000000 0.543053 -0.312523 -0.488522 -0.607263 
0.000000 0.368028 0.914330 0.030736 -0.166166 
0.000000 0.624136 -0.108354 -0.174064 0.753933 
B = 
1.346302 2.247644 0.000000 0.000000 0.000000 
0.000000 1.074551 0.419812 0.000000 0.000000 
0.000000 0.000000 0.644380 0.074792 0.000000 
0.000000 0.000000 0.000000 0.359298 0.159569 
0.000000 0.000000 0.000000 0.000000 0.347631 
From the print of B, it is seen that it is upper bidiagonal
Checks that U and V are orthogonal: Requires that U^T*U = U*U^T = I and V^T*V = V*V^T = I
U^T*U = 
1.000000 0.000000 0.000000 0.000000 0.000000 
0.000000 1.000000 0.000000 0.000000 0.000000 
0.000000 0.000000 1.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 1.000000 0.000000 
0.000000 0.000000 0.000000 0.000000 1.000000 
U*U^T = 
1.000000 0.000000 0.000000 0.000000 0.000000 
0.000000 1.000000 0.000000 0.000000 0.000000 
0.000000 0.000000 1.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 1.000000 0.000000 
0.000000 0.000000 0.000000 0.000000 1.000000 
V^T*V = 
1.000000 0.000000 0.000000 0.000000 0.000000 
0.000000 1.000000 0.000000 0.000000 0.000000 
0.000000 0.000000 1.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 1.000000 0.000000 
0.000000 0.000000 0.000000 0.000000 1.000000 
V*V^T = 
1.000000 0.000000 0.000000 0.000000 0.000000 
0.000000 1.000000 0.000000 0.000000 0.000000 
0.000000 0.000000 1.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 1.000000 0.000000 
0.000000 0.000000 0.000000 0.000000 1.000000 
Check: that U*B*V^T = A
Original A =
0.840188 0.394383 0.783099 0.798440 0.911647 
0.197551 0.335223 0.768230 0.277775 0.553970 
0.477397 0.628871 0.364784 0.513401 0.952230 
0.916195 0.635712 0.717297 0.141603 0.606969 
0.016301 0.242887 0.137232 0.804177 0.156679 
U*B*V^T (should be A) =
0.840188 0.394383 0.783099 0.798440 0.911647 
0.197551 0.335223 0.768230 0.277775 0.553970 
0.477397 0.628871 0.364784 0.513401 0.952230 
0.916195 0.635712 0.717297 0.141603 0.606969 
0.016301 0.242887 0.137232 0.804177 0.156679 
---------------------------------------------------------------------------------------------
The algoritm can also be used to solve linear equations, Ax = b.
Since A = U*B*V^T, then the the system of linear equations can be written as U*B*V^T*x=b .
Since U is ortogonal: B*V^T*x=U^T*b
Defines: y = V^T*x and solves B*y=U^T*b.
And then calculates x = V*y.
The function to do this is SolveGKL, which is implementes in functions.c
A random vector, b, is generated:b = 
  0.400944 
   0.12979 
  0.108809 
  0.998925 
  0.218257 
A*x=b is solved for x
x = 
   0.90091 
   1.05921 
   0.31227 
  0.117629 
  -1.21997 
Checks that A * x = b
A*x =
  0.400944 
   0.12979 
  0.108809 
  0.998925 
  0.218257 
---------------------------------------------------------------------------------------------
The algoritm can also be used to find the determinant of the matrix A
Since A = U*B*V^T, then det(A)=det(U)det(B)det(V^T).
Since U and V are orthogonale: U^2=I and V^2=I
Therefore |det(A)|=|det(B)|
Since B is triangular, det(B) = Î i Bii |
Calculates |det(A)|...
|det(A)| = 0.116435
---------------------------------------------------------------------------------------------
The algoritm can also be used to find the inverse of the matrix A
The method is very similar to the one in Homework 2
Simply solves A*x_k =e_k for k = 1,2,...,n with the linear equation solver.
Where e_k are unit vectors with a 1 on the k'th element and zero everywhere else.
Calculating the inverse of A...
A^-1 = 
0.968821 -1.432644 -0.573365 0.815043 -0.244522 
-2.201349 0.189095 0.795428 1.539617 1.341412 
0.037469 1.589897 -1.096999 0.193008 0.079982 
0.506199 -0.331110 -0.314609 -0.248448 1.099890 
0.680824 0.162824 1.402172 -1.365398 -1.386957 
Checks that A*A^-1 = A^-1*A = I:
A*A^-1 =
1.000000 0.000000 0.000000 0.000000 0.000000 
0.000000 1.000000 0.000000 0.000000 0.000000 
0.000000 0.000000 1.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 1.000000 0.000000 
0.000000 0.000000 0.000000 0.000000 1.000000 
A^-1*A =
1.000000 0.000000 0.000000 0.000000 0.000000 
0.000000 1.000000 0.000000 0.000000 0.000000 
0.000000 0.000000 1.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 1.000000 0.000000 
0.000000 0.000000 0.000000 0.000000 1.000000 
---------------------------------------------------------------------------------------------
